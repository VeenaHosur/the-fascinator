#macro(displayFacetTree $facetTreeId $facetField)
  <div class="facet-group mainmenu ui-helper-hidden ui-helper-clearfix">
      <div class="mainmenu-top"></div>
      <div class="mainmenu-heading"></span>$facetField.get("label")</div>
      <div class="menu box hidden">
        <!--<h2>$facetField.get("label")</h2>-->
        <div id="$facetTreeId" class="menu facet-list clearfix"></div>
      </div>
  </div>
  <script type="text/javascript">
  $(function() {
      createTree("#$facetTreeId", "$facetTreeId");
  });
  </script>
#end
#macro(displayFacet $facetFieldKey $facetField)
  #set($facetCounts = $self.getFacetCounts($facetFieldKey))
  #if($facetCounts.size() > 0)
  <div class="facet-group mainmenu ui-helper-hidden ui-helper-clearfix">
    <div class="mainmenu-top"></div>
    <div class="mainmenu-heading">$facetField.get("label")</div>
    ##<ul class="facet-list menu" id="$facetFieldKey">
    
    <ul class="facet-list menu-list" id="$facetFieldKey">
    #foreach($facetCountKey in $facetCounts.keySet())
      #set($facetCount = $facetCounts.get($facetCountKey))
      #set($facetQuery = $self.getFacetQuery($facetFieldKey, $facetCountKey))
      #set($selected = $self.isSelected($facetQuery))
      <li#if($selected) class="selected"#end>
      #if($self.isPortalQueryFacet($facetQuery))
        <a class="portal-facet">$facetCountKey&nbsp;<span class="facet-count">($facetCount)</a></span>
      #else
        #if($selected)
          #set($facetClass = "remove-facet selected")
        #else
          #set($facetClass = "add-facet")
        #end
        #set($facetLabel = "$page.escapeText($facetCountKey)")
        <a class="facet $facetClass" href="#" rel='$facetFieldKey:"$facetCountKey"' title="$facetLabel ($facetCount)">
          $facetLabel&nbsp;<span class="facet-count">($facetCount)</span>
        </a>
      #end
      </li>
    #end
    </ul>
    </div>
  #end
#end
#set($pageTitle = 'Search')
#set($query = $sessionState.get("query"))
#if($query!="")
  #set($atomLink = "$portalPath/feed/atom?query=$query") 
#else
  #set($atomLink = "$portalPath/feed/atom")
#end
#set($pageHeader = "<link rel=alternate type=application/atom+xml href=$atomLink title='$self.portalName'>")
#set($paging = $self.paging)
#if($self.result and $paging.totalFound > 0)
#end

<table class="layout">
  <tbody>
    <tr>
      <td class="leftcol">
        <div class="columnbox">
          <div class="mainmenu">
            <div class="mainmenu-top"></div>
            <div class="mainmenu-heading">Public Memory Research Centre</div>
            <ul class="menu-list">
              <li><a href="$portalPath/home">Home</a></li>
              <li><a href="$portalPath/browse">Browse</a></li>
              <li class="selected">Search</li>
            </ul>
          </div>
          
          #if($self.hasSelectedFacets() || $query != "")
            <div class="mainmenu">
              <div class="mainmenu-top"></div>
              <div class="mainmenu-heading">Actions</div>
              <ul class="menu-list">
                #if($query != "")
                  <li><a href="$portalPath/search">Clear search</a></li>
                #end
                #if($self.hasSelectedFacets())
                  <li><a id="clear-facets" href="#">Clear selection</a></li>
                #end
              </ul>
            </div>
          #end
          
          ##<div class="mainmenu">
          #if($page.authentication.is_logged_in())
              #set($facetFields = $self.result.getMap("facet_counts/facet_fields"))
              #foreach($facetFieldKey in $facetFields.keySet())
                #set($facetField = $self.getFacetField($facetFieldKey))
                #if($facetField.get("display") == "tree")
                  #displayFacetTree($facetFieldKey $facetField)
                #else
                  #displayFacet($facetFieldKey $facetField)
                #end
              #end
          #end
          ##</div>
        </div>
      </td>
      <td class="middlecol">
        <h2 class="content-title">Search</h2>
        #if($page.authentication.is_logged_in())
        <div class="search-box">
          <form action="$portalPath/search" id="search-form" method="post">
              <input type="text" id="query" name="query" size="70" value="$!query" />
              <input type="submit" name="search" value="Search" />
              <p class="search-message">Displaying <strong>${paging.startNum}</strong> to <strong>${paging.endNum}</strong> of <strong>${paging.totalFound}</strong> records (in $self.queryTime seconds)</p>
            #parse($page.getTemplate("search-paging.vm"))
          </form>
        </div>
        #if($self.result and $paging.totalFound > 0)
        <div class="result-list">
            <h2>Results
                ##<span class="right">Showing ${paging.startNum} to ${paging.endNum} of ${paging.totalFound} items ($self.queryTime seconds)</span>
            </h2>
            #if($self.result and $paging.totalFound > 0)
                #set ($is_admin = $page.authentication.is_admin())
                #set ($count = 1)
                #set ($row = 1)
                <table><tr>
                #foreach($item in $self.result.getList("response/docs"))
                    #set($id = $item.get("id"))
                    #set($hashId = $page.md5Hash($id))
                    #set($dcTitle = "")
                    #set($dcTitle = $item.get("dc_title").get(0))
                    #if($dcTitle.trim() != "")
                      #set($title = $dcTitle)
                    #else
                      #set($title = $self.getFileName($id))
                    #end
                    #set($format = $item.get("dc_format").get(0))
                    #set($description = "")
                    #set($description = $item.get("dc_description").get(0))
                    <td width="33%">
                    <div id="$hashId" class="article#if($velocityCount==1) first#end">
                      <p><img src="$portalPath/$self.getMimeTypeIcon($format)" title="$!format" style="margin-bottom: -3px;"/>
                      <a href="$portalPath/detail/$self.encode($id)">$title</a></p>
                      <div rel="$id" class="tags">Tags: <span class="tags-here"></span></div>
                      #set($thumbnail = $self.getThumbnail($id))
                      #if($thumbnail)
                        <a class="image" href="$portalPath/detail/$id">
                          <img src="$portalPath/download/$id/$thumbnail" title="$title"/>
                        </a>
                      #else
                        #set($mimeType=$item.get("dc_format").get(0))
                        #if ($mimeType.startsWith("audio/"))
                            <a class="image" href="$portalPath/detail/$id">
                              <img src="$portalPath/images/usq/audio_icon.png" title="$title"/>
                            </a>
                        #end
                        ##<h3><a href="$portalPath/detail/$self.encode($id)">$title</a></h3>
                      #end
                      <p class="item-description">$!description&nbsp;</p>
                    </div>
                    <div class="clear"></div>
                    </td>
                    #set ($count = $count+1)
                    #if ($count==4)
                       #set($mod = $row%2)
                       </tr>
                       #if ($mod==0)
                            <tr>
                       #else
                            <tr style="background:#FFFFCC;">
                       #end
                       #set ($count = 1)
                       #set ($row = $row+1)
                    #end
                #end
                ##if ($count<4)  ##need to fix the column that is not properly created
                </tr></table>
            #else
                <div class="box no-result">No items found matching your query: '$!query'</div>
            #end
        </div>
        #end
        #else
              <div class="login-error">You do not have permission to view this page. Please login to proceed<!--<a id="login-now" href="#">Login</a>-->.</div>
        #end
      </td>
    </tr>
  </tbody>
</table>

  <script type="text/javascript">
  // hierarchical facet trees
  function createTree(selector, facetField) {
      var tree = jQuery.tree.create();
      tree.init($(selector), {
          data: {
              type: "json",
              opts: {
                  url: "$portalPath/search-tree.ajax?facet.field=" + facetField
              }
          },
          selected: $self.selectedFacetIds,
          ui: {
              animation: 250,
              dots: false,
              theme_name: "checkbox"
          },
          opened: [],
          plugins: {
              checkbox: {},
              cookie: {
                  prefix: "tf_tree_" + facetField
              }
          },
          callback: {
              beforedata: function(node, tree) {
                  return {
                      id: $(node).attr("id") || 0,
                      query: $("#query").val()
                  };
              },
              onchange: function(node, tree) {
                  $(node).children("a").removeClass("clicked");
                  $(node).children("a").toggleClass("checked");
              },
              onload: function(tree) {
                  tree.container.find("a").bind("click", function() {
                      var checked = $(this).hasClass("checked") == false;
                      doAction(checked ? "add_fq" : "remove_fq", $(this).parent().attr("fq"));
                  });
                  var nodeCount = $(selector).find("li").length;
                  if (nodeCount > 0) {
                      $(selector).parent("div").show();
                  }
              }
          }
      });
      return tree;
  }
  </script>

<script type="text/javascript" src="$portalPath/js/tree/jquery.tree.min.js"></script>
<script type="text/javascript" src="$portalPath/js/jquery.truncate.js"></script>
<script type="text/javascript">
<!--
$(function() {
    addActionParam("query", "$!query");
    
    if ($("#action-list div").length == 0) {
        $("#result-list").removeClass("grid_12").addClass("grid_16");
    }
    
    // facet actions
    $("#clear-facets").click(function() {
        doAction("clear_fq");
        return false;
    });
    $(".add-facet").click(function() {
        doAction("add_fq", $(this).attr("rel"));
        return false;
    });
    $(".remove-facet").click(function() {
        doAction("remove_fq", $(this).attr("rel"));
        return false;
    });
    
    // truncate descriptions
    $("p.item-description").truncate(500, {
        trail: [ '... <a href="#" class="truncate_show">more</a>',
                 ' <a href="#" class="truncate_hide">less</a>' ]
    });
    
    // create view
    $("#create-view, #create-view-cancel").click(function() {
        $("#create-view").toggleClass("selected");
        $("#create-view-box").toggle("blind");
        $("#create-view-id").focus();
        return false;
    });
    $("#create-view-accept").click(function() {
        jQuery.post("$portalPath/actions/view.ajax",
            {
                func: "create-view",
                id: $("#create-view-id").val(),
                description: $("#create-view-description").val()
            },
            function(data, status) {
                $("#create-view-box").toggle("blind");
                $("#create-view-id").val("");
                $("#create-view-description").val("");
                window.location = data.url;
            },
            "json"
        );
    });
    
    // packaging
    function getSelectedItems() {
        var titles = [];
        var added = [];
        var removed = [];
        $(".package-select:checked").each(function(count, item) {
            titles.push($(item).attr("rel"));
            added.push($(item).attr("value"));
        });
        $(".package-select:not(:checked)").each(function(count, item) {
            removed.push($(item).attr("value"));
        });
        return { titles: titles, added: added, removed: removed };
    }
    
    function updatePackage() {
        var selected = getSelectedItems();
        jQuery.extend(selected, { func: "update" });
        jQuery.ajax({
            type: "POST",
            url: "$portalPath/actions/packaging.ajax",
            data: selected,
            error: function(xhr, status, e) {
                $("#package-selected-items").html("Error updating selection!");
            },
            success: function(data, status) {
                var count = data.count;
                var msg = (count > 0 ? count : "No") + " items selected";
                $("#package-selected-items").attr("rel", count);
                $("#package-selected-items").html(msg);
            },
            dataType: "json"
        });
    }
    
    function clearPackage() {
        $(".package-select").removeAttr("checked");
        var selectedItems = $("#package-selected-items");
        if (selectedItems.attr("rel") > 0) {
            jQuery.post("$portalPath/actions/packaging.ajax",
                { func: "clear" },
                function(data, status) {
                    selectedItems.attr("rel", 0).html("Package cleared!");
                    setTimeout(function() {
                        selectedItems.html("No items selected");
                    }, 3000);
                },
                "json");
        } else {
            selectedItems.html("Package is already empty!");
            setTimeout(function() {
                selectedItems.html("No items selected");
            }, 3000);
        }
    }
    
    $("#package-create-new").click(function() {
        clearPackage();
        $("#package-create-new").hide();
        $("#package-create-selected").html("Package selected items...");
        return false;
    });
    
    $("#package-create-selected").click(function() {
        var selectedItems = $("#package-selected-items");
        if (selectedItems.attr("rel") == 0) {
            var lastMsg = selectedItems.html();
            selectedItems.html("Package is empty!");
            setTimeout(function() {
                selectedItems.html(lastMsg);
            }, 3000);
        } else {
            $("#package-selected-loading").show();
            var selected = getSelectedItems();
            jQuery.extend(selected, { func: "create-from-selected" });
            jQuery.ajax({
                type: "POST",
                url: "$portalPath/actions/packaging.ajax",
                data: selected,
                error: function(xhr, status, e) {
                    alert("Failed to create package!");
                },
                success: function(data, status) {
                    if (data.status == "ok") {
                        window.location.href = data.url;
                    } else {
                        alert("Failed to create package!");
                    }
                },
                dataType: "json"
            });
        }
        return false;
    });
    
    $("#package-select-page").click(function() {
        $(".package-select").attr("checked", "checked");
        updatePackage();
        return false;
    });
    
    $("#package-deselect-page").click(function() {
        $(".package-select").removeAttr("checked");
        updatePackage();
        return false;
    });
    
    $("#package-clear-all").click(function() {
        clearPackage();
        return false;
    });
    
    $(".package-select").click(function() {
        updatePackage();
    });
});
-->
</script>

<script type="text/javascript" src="$portalPath/js/anotar/lib/json2.js"></script>
<script type="text/javascript" src="$portalPath/js/anotar/anotar-0.2.js"></script>
<script type="text/javascript">
    $(function(){
        jQ = jQuery;
        
        // Tags annotation
        tagConfig = {
            //debug: true,
            docRoot: ".result-list",
            tagList: ".tags",
            contentInput: "#object-tag-input",
            uriAttr: "rel",
            outputInChild: ".tags-here",
            annotationType: "tag",
            stylePrefix: "tags-",
            displayCustom: "tag_display",
            creator: "$creator",
            creatorUri: "$creatorUri",
            interfaceLabel: " <img src='$portalPath/images/icons/add.png'/>",
            interfaceVisible: true,
            formCustom: "object_tag_form",
            formCancel: ".myTag-cancel",
            formSubmit: ".myTag-submit",
            serverAddress: "$portalPath/actions/anotar.ajax",
            disableReply: true,
            serverMode: "fascinator"
        }
        tag = anotarFactory(jQ, tagConfig);
        
    });
</script>

<script type="text/html" id="tag_display">
    <% if (contentUri) { %>
        <span class='<%=style%>tag'>
		    <a href='<%=contentUri%>' target='_blank'><%=content%><% if(tagCount > 1){ %> (<%=tagCount%>)<% } %></a>
        </span>
    <% } else { %>
        <span class='<%=style%>tag'><%=content%><% if(tagCount > 1){ %> (<%=tagCount%>)<% } %></span>
    <% } %>
</script>

<script type="text/html" id="object_tag_form">
    <div class='myTags float-right'>Tag this:
      <input id="object-tag-input" type="text" />
      <img src='$portalPath/images/icons/tick.png' class='myTag-submit' />&#160;
      <img src='$portalPath/images/icons/cross.png' class='myTag-cancel' />
    </div>
</script>

#if($is_admin)
<script type="text/javascript">
<!--
$(function() {
    var dialogOpts = {
        title: "Manage Security",
        autoOpen: false,
        hide: "blind",
        width: 330,
        modal: true
    }
    $("#security-form").dialog(dialogOpts);

    $(".add-role-button").click(function() {
        pluginId = $(this).attr("rel");
        $("#security-message").empty();
        $("#security-error").hide();
        $("#security-new-" + pluginId).show();
        return false;
    });

    $(".security-new-submit").click(function() {
        var pluginId = $(this).attr("rel");
        $("#security-message").empty();
        $("#security-error").hide();
        $("#security-new-" + pluginId).hide();
        $("#security-loading-" + pluginId).show();

        jQuery.ajax({
            type : "POST",
            url : "$portalPath/actions/admin.ajax",
            success:
                function(data, status) {
                    addRow(pluginId, data);
                    $("#security-empty-" + pluginId).hide();
                    $("#security-loading-" + pluginId).hide();
                },
            error:
                function (req, status, e) {
                    $("#security-error").show();
                    $("#security-message").html(req.responseText);
                    $("#security-loading-" + pluginId).hide();
                },
            data: {
                record: recordId,
                role: $("#security-new-role-" + pluginId).val(),
                source: pluginId,
                verb: "grant-access"
            }
        });

        return false;
    });

    var recordId = "";
    var refresh_link;
    $(".admin-security-link").click(function() {
        refresh_link = $(this);
        recordId = $(this).attr("rel");
        $("#security-message").empty();
        $("#security-error").hide();
        $("#security-form").dialog('open');
        $("#security-legend").html(recordId);

        jQuery.ajax({
            type : "POST",
            url : "$portalPath/actions/admin.ajax",
            success: securityQuery,
            error:
                function (req, status, e) {
                    $("#security-error").show();
                    $("#security-message").html(req.responseText);
                },
            data: {
                record: recordId,
                verb: "get-current-access"
            }
        });

        return false;
    });

    function securityQuery(data, status) {
        var response = eval("(" + data + ")");
        for (var i in response) {
            $("#security-rows-" + i).html("");
            if (response[i].length == 0) {
                $("#security-empty-" + i).show();
                $("#security-loading-" + i).hide();
            } else {
                $("#security-empty-" + i).hide();
                len = response[i].length;
                for (var j = 0; j < len; j++) {
                    addRow(i, response[i][j]);
                }
                $("#security-loading-" + i).hide();
            }
        }
        $(".remove-role-link").click(revoke_access);
    }
    function addRow(pluginId, value) {
        var data = $("#security-rows-" + pluginId).html();
        data += "<tr><td>" + value;
        data += " <a class='remove-role-link' rel='" + pluginId + "' value='" + value + "' href='#'>";
        data += "<img src='$portalPath/images/icons/cross.png'/></a>";
        data += "</td></tr>";
        $("#security-rows-" + pluginId).html(data);
    }

    function revoke_access() {
        var pluginId = $(this).attr("rel");
        $("#security-message").empty();
        $("#security-error").hide();
        $("#security-loading-" + pluginId).show();

        jQuery.ajax({
            type : "POST",
            url : "$portalPath/actions/admin.ajax",
            success:
                function(data, status) {
                    refresh_link.click();
                },
            error:
                function (req, status, e) {
                    $("#security-error").show();
                    $("#security-message").html(req.responseText);
                    $("#security-loading-" + pluginId).hide();
                },
            data: {
                record: recordId,
                role: $(this).attr("value"),
                source: pluginId,
                verb: "revoke-access"
            }
        });

        return false;
    }

    $("#security-cancel").click(function() {
        $("#security-message").empty();
        $("#security-error").hide();
        $("#security-form").dialog('close');
        return false;
    });
});
-->
</script>
#end
