#set($pageTitle = 'Search')
#set($query = $formData.get("query"))
#set($atomLink = "$portalPath/feed/atom?query=$!query") 
#set($pageHeader = '<link rel="stylesheet" type="text/css" href="js/tree/tree_component.css" />
  <link rel="alternate" type="application/atom+xml" href="'+ $atomLink +'"/>
  <script type="text/javascript" src="js/tree/lib/css.js"></script>
  <script type="text/javascript" src="js/tree/tree_component.min.js"></script>
  <script type="text/javascript" src="js/jquery.truncate.js"></script>')
<table class="layout">
  <tbody>
    <tr>
      <td class="leftcol">
        <div class="columnbox">
          ## facets
          <div class="mainmenu">
            <div class="mainmenu-top"></div>
            <div class="mainmenu-heading">Title</div>
          </div>
          <div id="title_group" class="ui-helper-clearfix"></div>
          <div class="mainmenu">
            <div class="mainmenu-top"> </div>
            <div class="mainmenu-heading">Policy type</div>
          </div>
          <div id="policy_type" class="ui-helper-clearfix"></div>
          #set($facetFields = $self.result.getMap("facet_counts/facet_fields"))
          #foreach($facetFieldKey in $facetFields.keySet())
            #set($facetCounts = $self.getFacetCounts($facetFieldKey))
            #if($facetCounts.size() > 0)
              ## TODO need a better way to test check for hierarchical facets
              #if($facetFieldKey != "f_title_group" && $facetFieldKey != "f_usq_document_policy_type")
                <div class="mainmenu">
                  <div class="mainmenu-top"></div>
                  <div class="mainmenu-heading">$self.getFacetName($facetFieldKey)</div>
                  <ul class="facet-list">
                  #foreach($facetCountKey in $facetCounts.keySet())
                    #set($facetCount = $facetCounts.get($facetCountKey))
                    #set($facetQuery = $self.getFacetQuery($facetFieldKey, $facetCountKey))
                    <li>
                    #if($self.isPortalQueryFacet($facetQuery))
                      <span class="selected">$facetCountKey</span> ($facetCount)
                    #else
                      #if($self.isSelected($facetQuery))
                        #set($facetClass = "remove-facet selected")
                      #else
                        #set($facetClass = "add-facet")
                      #end
                      <a class="$facetClass" href="#" rel='$facetFieldKey:"$facetCountKey"'>$facetCountKey</a> ($facetCount)
                    #end
                    </li>
                  #end
                  </ul>
                </div>
              #end
            #end
          #end
        </div>
      </td>
      <td class="middlecol">
        <div class="result-list">
          <ul>
          #foreach($item in $self.result.getList("response/docs"))
            #set($id = $item.get("id"))
            #set($dcTitle = "")
            #set($dcTitle = $item.get("dc_title").get(0))
            #if($dcTitle.trim() != "")
              #set($title = $dcTitle)
            #else
              #set($title = $self.getFileName($id))
            #end
            #set($description = "")
            #set($description = $item.get("dc_description").get(0))
            <li>
              <div id="$id">
                <h3><a href="detail/$id">$title</a></h3>
                <p class="item-description">$!description</p>
                #set($format = $item.get("dc_format").get(0))
                #if($format.startsWith("image/"))
                  <img src="download/$id/$self.getThumbnail($id)"></img>
                #end
              </div>
            </li>
          #end
          </ul>
        </div>
      </td>
    </tr>
  </tbody>
</table>
<script type="text/javascript">
$(function() {
    addActionParam("query", "$!query");
    
    $("#policy_type").tree({
        data: {
            async: true,
            async_data: function(node) {
                return {
                    id: $(node).attr("id") || 0,
                    query: $("#query").val()
                }
            },
            type: "json",
            url: "search-tree-policy.ajax"
        },
        selected: $self.selectedFacetIds,
        cookies: {
            prefix: "TFSearchTree",
            selected: false
        },
        ui: {
            animation: 250,
            dots: false,
            theme_name: "checkbox"
        },
        rules: {  
            multiple: "on",
            renameable: "none",
            deletable: "none",
            creatable: "none",
            draggable: "none",
            dragrules: "none"
        },
        callback: {
            onchange: function(node, tree) {
                $(node).children("a").removeClass("clicked");
                $(node).children("a").toggleClass("checked");
            },
            onload: function(tree) {
                tree.container.find("a").bind("click", function() {
                    var checked = $(this).hasClass("checked") == false;
                    doAction(checked ? "add_fq" : "remove_fq", $(this).parent().attr("fq"));
                });
            },
            onrgtclk: function(node, tree, ev) {
                ev.preventDefault();
                ev.stopPropagation();
                return false;
            }
        }
    });
    
    $("#title_group").tree({
        data: {
            async: true,
            async_data: function(node) {
                return {
                    id: $(node).attr("id") || 0,
                    query: $("#query").val()
                }
            },
            type: "json",
            url: "search-tree-title.ajax"
        },
        selected: $self.selectedFacetIds,
        cookies: {
            prefix: "TFSearchTree",
            selected: false
        },
        ui: {
            animation: 250,
            dots: false,
            theme_name: "checkbox"
        },
        rules: {
            multiple: "on",
            renameable: "none",
            deletable: "none",
            creatable: "none",
            draggable: "none",
            dragrules: "none"
        },
        callback: {
            onchange: function(node, tree) {
                $(node).children("a").removeClass("clicked");
                $(node).children("a").toggleClass("checked");
            },
            onload: function(tree) {
                tree.container.find("a").bind("click", function() {
                    var checked = $(this).hasClass("checked") == false;
                    doAction(checked ? "add_fq" : "remove_fq", $(this).parent().attr("fq"));
                });
            },
            onrgtclk: function(node, tree, ev) {
                ev.preventDefault();
                ev.stopPropagation();
                return false;
            }
        }
    }); 
    $("#clear-facets").click(function() {
        doAction("clear_fq");
        return false;
    });
    $(".add-facet").click(function() {
        doAction("add_fq", $(this).attr("rel"));
        return false;
    });
    $(".remove-facet").click(function() {
        doAction("remove_fq", $(this).attr("rel"));
        return false;
    });
    // zebra the results
    $("#result-item-list li:even").css("background-color", "#EBEBEB");
    // truncate descriptions
    $("p.item-description").truncate(500, {
        trail: [ '... <a href="#" class="truncate_show">more</a>',
                 ' <a href="#" class="truncate_hide">less</a>' ]
    });
});
</script>
