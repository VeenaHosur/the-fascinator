try:
    from xml.etree import cElementTree as ElementTree
except ImportError:
    try:
        import cElementTree as ElementTree
    except ImportError:
        from elementtree import ElementTree
        
from datetime import datetime
from foresite import *
import atom, sys

class AtomFeed(object):
    def __init__(self, db, atomUrl=None, fromDate=None, toDate=None, title="Watcher"):
        self.feed = atom.Feed()
        self.__fromDate = fromDate
        self.__toDate = toDate
        if self.__toDate is None:
            self.__toDate = datetime.today()
        self.title = title
        self.db = db
        
        self.atomUrl = atomUrl
        
    def getFeed(self):
        entries = self.__getEntries()
        self.feed.id = atom.Id(text = self.__getAtomTagId("watcher"))
        dateNow = datetime.now().isoformat() + 'Z'
        self.feed.updated = atom.Updated(text = dateNow)
        altUrl = self.atomUrl
        self.feed.link = [atom.Link(href = "%s&format=atom" % altUrl, rel = "self"),
                          atom.Link(href = altUrl, rel = "alternate")]
        self.feed.author = [atom.Author(name = atom.Name(text = "watcher"))]
        
        entry = atom.Entry(title = atom.Title(text = self.title)) 
        entry.id = atom.Id(text = "urn:uid:%s" % id)
        
        entry.link = [atom.Link(href = altUrl, rel = "alternate")]
        entry.updated = atom.Updated(text = dateNow)
        entry.published = atom.Published(text = dateNow)
        entry.summary = atom.Summary(summary_type = "html", text = unicode(str(entries), "utf-8"))
        #entry.content = atom.Content(content_type = "text/text",  text = unicode(str(entries), "utf-8"))
        
        self.feed.entry = entry
        feedXml = self.feed.ToString()
        
        #remove the namespace generated by elementtree/gdata as it causes
        #problems with some readers
        feedXml = feedXml.replace(":ns0", "")
        feedXml = feedXml.replace("ns0:", "")
        
        #insert the title manually as elementtree/gdata places the title in the
        #wrong position
        insertPos = feedXml.find("<entry>")
        feedXml = "%s<title>%s</title>%s" % (feedXml[:insertPos],
                                             self.title,
                                             feedXml[insertPos:])

        return [feedXml]
    
    def __getEntries(self):
        if self.__fromDate:
            records = self.db.getRecordDate(self.__fromDate, self.__toDate)
        else:
            records = self.db.select()
        
        dict = {}
        for record in records:
            filePath, timeStamp, eventName = record
            if not filePath.startswith("http://"):
                filePath = "file://%s" % filePath
            dict[filePath] = self.__getjSonEntry(timeStamp, eventName)
        
        return dict
    def __getAtomTagId(self, id):
        return "tag:%s:%s" % (datetime.now().strftime("%Y"), id)
    
    
    def __getjSonEntry(self, timeStamp, eventName):
        detail = {}
        detail["time"] = timeStamp
        detail["state"] = eventName
        return detail

    
#<feed>
#<entry>
#<content>
#{ filePath: { "time": "xx:xx:xx",
#              "state": "mod" 
#            }
#}